{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sqaym\\\\desktop\\\\Musicdb-web\\\\musicdb-web\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Artist1: [],\n      Album: [],\n      Song: []\n    };\n  }\n\n  componentDidMount() {\n    const endpoint = \"http://localhost:8000\";\n    fetch(endpoint + \"/artists\").then(responce => responce.json()).then(result => this.setState({\n      Artist1: result\n    }));\n    fetch(endpoint + \"/albums\").then(responce => responce.json()).then(result => this.setState({\n      Album: result\n    }));\n    fetch(endpoint + \"/songs\").then(responce => responce.json()).then(result => this.setState({\n      Song: result\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          Artist1 = _this$state.Artist1,\n          Album = _this$state.Album,\n          Song = _this$state.Song;\n    console.log(Artist1, Album, Song);\n\n    if (Artist1.lenght === 0 && Album.lenght === 0 && Song.lenght === 0) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Nothing To Show\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"artist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, Object.entries(Artist1).map((el, i) => React.createElement(\"th\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, el[0])))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, Artist1.map(el => React.createElement(\"tr\", {\n        key: el.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, Object.entries(el).map((el, i) => React.createElement(\"td\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, el[1]))))))), React.createElement(\"div\", {\n        className: \"album\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, Object.entries(Album).map((el, i) => React.createElement(\"th\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, el[0])))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, Album.map(el => React.createElement(\"tr\", {\n        key: el.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, Object.entries(el).map((el, i) => React.createElement(\"td\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, el[1]))))))), React.createElement(\"div\", {\n        className: \"song\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, Object.entries(Song).map((el, i) => React.createElement(\"th\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, el[0])))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, Song.map(el => React.createElement(\"tr\", {\n        key: el.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, Object.entries(el).map((el, i) => React.createElement(\"td\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, el[1]))))))));\n    }\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["C:\\Users\\sqaym\\desktop\\Musicdb-web\\musicdb-web\\src\\App.js"],"names":["React","Component","List","constructor","props","state","Artist1","Album","Song","componentDidMount","endpoint","fetch","then","responce","json","result","setState","render","console","log","lenght","Object","entries","map","el","i","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\n\r\n\r\nclass List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    Artist1:[],\r\n    Album:[],\r\n    Song:[],\r\n    };\r\n\r\n  }\r\n   \r\n  componentDidMount() {\r\n    const endpoint = \"http://localhost:8000\";\r\n    fetch(endpoint+\"/artists\")\r\n    .then (responce => responce.json())\r\n    .then(result=> this.setState({Artist1:result}));\r\n\r\n    \r\n    fetch(endpoint+\"/albums\")\r\n    .then (responce => responce.json())\r\n    .then(result=> this.setState({Album:result}));\r\n\r\n    fetch(endpoint+\"/songs\")\r\n    .then (responce => responce.json())\r\n    .then(result=> this.setState({Song:result}));\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const {Artist1, Album, Song} = this.state;\r\nconsole.log (Artist1, Album, Song)\r\nif(Artist1.lenght === 0 && Album.lenght === 0 && Song.lenght === 0){\r\n  return(<p>Nothing To Show</p>)\r\n}else{\r\n    return (\r\n      <div className=\"all\">\r\n      <div className=\"artist\">\r\n        <table className=\"table\">\r\n            <thead><tr>{Object.entries(Artist1).map((el,i) => <th key={i}>{el[0]}</th>)}\r\n          </tr>\r\n          </thead>\r\n        <tbody>\r\n          {Artist1.map(el =>(\r\n            <tr key={el.id}>\r\n              {Object.entries(el).map((el,i) => <td key={i}>{el[1]}</td>)}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n        </table>\r\n      </div>\r\n\r\n<div className=\"album\">\r\n<table className=\"table\">\r\n    <thead><tr>{Object.entries(Album).map((el,i) => <th key={i}>{el[0]}</th>)}\r\n  </tr>\r\n  </thead>\r\n<tbody>\r\n  {Album.map(el =>(\r\n    <tr key={el.id}>\r\n      {Object.entries(el).map((el,i) => <td key={i}>{el[1]}</td>)}\r\n    </tr>\r\n  ))}\r\n</tbody>\r\n</table>\r\n</div>\r\n\r\n<div className=\"song\">\r\n<table className=\"table\">\r\n    <thead><tr>{Object.entries(Song).map((el,i) => <th key={i}>{el[0]}</th>)}\r\n  </tr>\r\n  </thead>\r\n<tbody>\r\n  {Song.map(el =>(\r\n    <tr key={el.id}>\r\n      {Object.entries(el).map((el,i) => <td key={i}>{el[1]}</td>)}\r\n    </tr>\r\n  ))}\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n    );\r\n  }\r\n\r\n}}\r\n\r\n\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}